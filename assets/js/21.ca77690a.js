(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{215:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Linux の TCP KeepAlive について調べたので、その備忘録です。")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#tl-dr"}},[t._v("TL;DR")])]),a("li",[a("a",{attrs:{href:"#tcp-keepalive-とはなにか"}},[t._v("TCP KeepAlive とはなにか")])]),a("li",[a("a",{attrs:{href:"#どうすれば-tcp-keepalive-を有効化できるのか"}},[t._v("どうすれば TCP KeepAlive を有効化できるのか")]),a("ul",[a("li",[a("a",{attrs:{href:"#socket-とシステムコール"}},[t._v("socket とシステムコール")])]),a("li",[a("a",{attrs:{href:"#ss-による-tcp-keepalive-判定"}},[t._v("ss による TCP KeepAlive 判定")])]),a("li",[a("a",{attrs:{href:"#strace-による-tcp-keepalive-判定"}},[t._v("strace による TCP KeepAlive 判定")])])])]),a("li",[a("a",{attrs:{href:"#ソースコードのないアプリケーションを-tcp-keepalive-対応させるには"}},[t._v("ソースコードのないアプリケーションを TCP KeepAlive 対応させるには?")]),a("ul",[a("li",[a("a",{attrs:{href:"#テストプログラム"}},[t._v("テストプログラム")])]),a("li",[a("a",{attrs:{href:"#libkeepalive-ありのテストプログラム"}},[t._v("libkeepalive ありのテストプログラム")])])])]),a("li",[a("a",{attrs:{href:"#参考"}},[t._v("参考")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"tl-dr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tl-dr"}},[t._v("#")]),t._v(" TL;DR")]),t._v(" "),a("p",[t._v("Linux や TCP KeepAlive に対応していますが、普通に "),a("code",[t._v("socket")]),t._v(" を開くだけだと有効化されません。既定では無効の状態です。アプリケーションが "),a("code",[t._v("setsockopt")]),t._v(" システムコールを (第 3 引数 = 1 で) 呼び出して、初めて TCP KeepAlive が有効化されます (ちなみに既定で TCP KeepAlive が無効なのは、Windows でも同様です)。")]),t._v(" "),a("p",[t._v("アプリケーションで TCP KeepAlive を有効化するには、2 つの方法がとれます。")]),t._v(" "),a("ul",[a("li",[t._v("アプリケーションで "),a("code",[t._v("setsockopt")]),t._v(" を実装する。ただし、ソースコードの編集やコンパイル/ビルドが出来る必要があります。")]),t._v(" "),a("li",[a("code",[t._v("LD_PRELOAD=libkeepalive.so")]),t._v(" を環境変数に宣言してからアプリケーションを実行する。ソースコードに手を加えなくて良いのが利点である一方、"),a("code",[t._v("libkeepalive.so")]),t._v(" をシステムに導入する必要があるのと、アプリ上の任意の TCP コネクションで TCP KeepAlive が効いてしまうのが欠点。")])]),t._v(" "),a("p",[t._v("こんな記事を読まなくても、必要なことは "),a("a",{attrs:{href:"https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP Keepalive HOWTO"),a("OutboundLink")],1),t._v(" に全部書いてあります。")]),t._v(" "),a("h2",{attrs:{id:"tcp-keepalive-とはなにか"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-keepalive-とはなにか"}},[t._v("#")]),t._v(" TCP KeepAlive とはなにか")]),t._v(" "),a("p",[t._v("TCP KeepAlive とは、TCP コネクションがアクティブな状態なのか (対向側やその間のネットワークが死んでないか) を検知する為の正常性監視の仕組みです。TCP のレイヤーで実装されているので、基本的にカーネルで制御する義務があります。HTTP KeepAlive とは全くの別物であることに注意しましょう。")]),t._v(" "),a("p",[t._v("主たる目的は正常性監視ですが、定期的にパケットを送信する仕組みとして TCP KeepAlive が使われることもあります。ネットワーク データパス上に存在する L4 のネットワーク アプライアンス機器には、しばしばタイムアウトが実装されています。このような機器ではフローテーブル等で通信の状態を保持しておかなければならず、タイムアウトがなければリソース枯渇を招く為です。例えば、30 分間ずっと無通信状態の TCP コネクションがあれば、それ以降のパケットはフォワーディングされません。ここに、(例えば 10 分毎に死活監視を行うような) TCP KeepAlive を導入する動機があります。")]),t._v(" "),a("p",[t._v("まとめると、TCP KeepAlive の目的は大まかに 2 つです。これらの目的を達成するために、TCP KeepAlive はコネクション単位で有効/無効が設定できるようになっています。")]),t._v(" "),a("ul",[a("li",[t._v("対向の正常性を監視すること")]),t._v(" "),a("li",[t._v("非活性なネットワークを活性化させて、コネクション切断を防ぐこと")])]),t._v(" "),a("h2",{attrs:{id:"どうすれば-tcp-keepalive-を有効化できるのか"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#どうすれば-tcp-keepalive-を有効化できるのか"}},[t._v("#")]),t._v(" どうすれば TCP KeepAlive を有効化できるのか")]),t._v(" "),a("p",[t._v("答えから言えば、Linux で TCP KeepAlive を有効化するには "),a("code",[t._v("setsockopt")]),t._v(" システムコールを使う必要があります。以下のようなシステムコールが "),a("code",[t._v("strace")]),t._v(" で確認できれば、その TCP コネクションには TCP KeepAlive が有効になります (そうでない限り無効)。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("setsockopt(<sockfd>, SOL_SOCKET, SO_KEEPALIVE, [1], 4)\n")])])]),a("p",[t._v("※ 第 3 引数が "),a("code",[t._v("[0]")]),t._v(" の場合、それは明示的な無効化を意味します。")]),t._v(" "),a("h3",{attrs:{id:"socket-とシステムコール"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#socket-とシステムコール"}},[t._v("#")]),t._v(" socket とシステムコール")]),t._v(" "),a("p",[t._v("Linux 並びに Windows では、TCP コネクションを活用したいアプリケーションは socket と呼ばれる特殊なファイルを開きます。例えば、Python3 で (socket を開いて) サーバーに接続するクライアントを作る時は、以下のようなコードを書くでしょう。")]),t._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" socket\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AF_INET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SOCK_STREAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8.8.8.8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("実際にこのプログラムを動かしてみると、("),a("code",[t._v("socket.sendall")]),t._v(" や "),a("code",[t._v("socket.recv")]),t._v(" がないので) 何もクライアントから送受信することは無い (e.g. HTTP のプロトコルに則っていない) のですが、TCP の 3way handshake やクローズの処理は正常に行えていることが確認できます。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" tcpdump "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8 port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),t._v(" -ni any\ntcpdump: verbose output suppressed, use -v or -vv "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" full protocol decode\nlistening on any, link-type LINUX_SLL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Linux cooked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", capture size "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("262144")]),t._v(" bytes\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":12:47.319493 IP "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5.50528 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8.53: Flags "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("S"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("464911782")]),t._v(", win "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64240")]),t._v(", options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mss "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1460")]),t._v(",sackOK,TS val "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3113655258")]),t._v(" ecr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(",nop,wscale "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", length "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":12:47.321744 IP "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8.53 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5.50528: Flags "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("S."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2773628164")]),t._v(", ack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("464911783")]),t._v(", win "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),t._v(",\noptions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mss "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1430")]),t._v(",sackOK,TS val "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1138427843")]),t._v(" ecr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3113655258")]),t._v(",nop,wscale "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", length "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":12:47.321781 IP "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5.50528 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8.53: Flags "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", ack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", win "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(", options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nop,nop,TS val "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3113655261")]),t._v(" ecr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1138427843")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", length "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":12:47.321963 IP "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5.50528 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8.53: Flags "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", ack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", win "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(", options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nop,nop,TS val "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3113655261")]),t._v(" ecr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1138427843")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", length "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":12:47.323556 IP "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8.53 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5.50528: Flags "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", ack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", win "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v(", options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nop,nop,TS val "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1138427846")]),t._v(" ecr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3113655261")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", length "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":12:47.323571 IP "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5.50528 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8.53: Flags "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", ack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", win "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(", options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nop,nop,TS val "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3113655262")]),t._v(" ecr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1138427846")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", length "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("また、どのようなシステムコールを発行しているか、という点も抑えておきましょう。なぜなら、システムコールはアプリケーションからの要求をカーネルが受け取る唯一の方法であり、後に見るように、"),a("strong",[t._v("システムコール次第で TCP KeepAlive の有効/無効が決定される")]),t._v("為です。TCP を管理するのは Kernel のネットワーク スタックなので、TCP KeepAlive に関する調節命令をアプリケーションからカーネルに出さないといけないのも納得ですね。")]),t._v(" "),a("p",[t._v("プログラムが発行するシステムコールを調べるには "),a("code",[t._v("strace")]),t._v(" を使います。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strace")]),t._v(" -ff -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("trace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("network python3 client.py "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\nsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AF_INET, SOCK_STREAM"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("SOCK_CLOEXEC, IPPROTO_IP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nconnect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("sa_family"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("AF_INET, "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sin_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("htons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sin_addr")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("inet_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8.8.8.8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n+++ exited with "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" +++\n")])])]),a("p",[t._v("さて、これらのシステムコールによって確立された TCP コネクションは、TCP KeepAlive が有効化されているのでしょうか？")]),t._v(" "),a("p",[t._v("初見で判定するのはなかなか難しいところなので、いくつかの既知の知識を使って読み解いて行きましょう。これから使うのは、以下の 2 つのツールです。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ss")]),t._v(": ソケットに関する統計量を取得する観測ツール。"),a("code",[t._v("-o (--options)")]),t._v(" を指定すると、TCP KeepAlive の有無やそのタイマーを表示してくれる。")]),t._v(" "),a("li",[a("code",[t._v("curl")]),t._v(": 様々なプロトコルに対応したクライアント。"),a("code",[t._v("--no-keepalive")]),t._v(" を指定すると TCP KeepAlive を無効化、デフォルトのままだと TCP KeepAlive を有効化する。")])]),t._v(" "),a("h3",{attrs:{id:"ss-による-tcp-keepalive-判定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ss-による-tcp-keepalive-判定"}},[t._v("#")]),t._v(" ss による TCP KeepAlive 判定")]),t._v(" "),a("p",[t._v("試しに先程の Python プログラムと、(TCP KeepAlive を有効化した) curl の結果を見比べてみましょう。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ python3 client.py\n\n$ ss -tanoe "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dst 8.8.8.8'")]),t._v("\nState   Recv-Q   Send-Q   Local Address:Port    Peer Address:Port\nESTAB   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5:52686        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8:53  \nusers:"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v('"python3"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29357")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v(" uid:1000 ino:305411 sk:196 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://8.8.8.8:53 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --no-keepalive を指定していない (TCP KeepAlive 有効化)")]),t._v("\n\n$ ss -tanoe "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dst 8.8.8.8'")]),t._v("\nState   Recv-Q   Send-Q   Local Address:Port    Peer Address:Port\nESTAB   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.3")]),t._v(".0.5:53326        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8:53   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nusers:"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v('"curl"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30213")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v(" timer:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keepalive,1min,0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" uid:1000 ino:311003 sk:19a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("code",[t._v("curl")]),t._v(" の方には、timer フィールドがあるのがわかりますね。詳細は "),a("code",[t._v("ss(8)")]),t._v(" の man に載っていますが、実際、timer フィールドの有無で TCP KeepAlive の有効/無効を判定することが出来ます。具体的には、ESTABLISHED な TCP コネクションを "),a("code",[t._v("ss -o")]),t._v(" で確認した時：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("timer:(keepalive, ...)")]),t._v(" が存在する場合、TCP KeepAlive は有効")]),t._v(" "),a("li",[a("code",[t._v("timer:(keepalive, ...)")]),t._v(" が存在しない場合、TCP KeepAlive は無効")])]),t._v(" "),a("p",[t._v("ちなみに、timer のセマンティクスは以下の通りです。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("timer:(<timer_name>,<expire_time>,<retrans>)\n\n<timer_name>\n        the name of the timer, there are five kind of timer names:\n        on : means one of these timers: TCP retrans timer, TCP early retrans timer and tail loss probe timer\n        keepalive: tcp keep alive timer\n        timewait: timewait stage timer\n        persist: zero window probe timer\n        unknown: none of the above timers\n\n<expire_time>\n        how long time the timer will expire\n\n<retrans>\n        how many times the retransmission occurred\n")])])]),a("ul",[a("li",[t._v("ref: "),a("a",{attrs:{href:"https://man7.org/linux/man-pages/man8/ss.8.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("man 8 ss"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"strace-による-tcp-keepalive-判定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strace-による-tcp-keepalive-判定"}},[t._v("#")]),t._v(" strace による TCP KeepAlive 判定")]),t._v(" "),a("p",[t._v("最初の Python プログラムでは TCP KeepAlive が有効になっていなかったことがわかりました。ここまでくればあともう一息です。最後に "),a("code",[t._v("curl")]),t._v(" が発行しているシステムコールを見るだけです。具体的には、TCP KeepAlive オプションによるシステムコールの差分を見てみます。")]),t._v(" "),a("div",{staticClass:"language-diff extra-class"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[t._v("$ strace -e trace=network -o on.log curl http://8.8.8.8:53\n$ strace -e trace=network -o off.log curl http://8.8.8.8:53 --no-keepalive\n$ diff on.log off.log\n\n"),a("span",{pre:!0,attrs:{class:"token deleted-arrow deleted"}},[t._v('< setsockopt(3, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0\n< setsockopt(3, SOL_TCP, TCP_KEEPIDLE, [60], 4) = 0\n< setsockopt(3, SOL_TCP, TCP_KEEPINTVL, [60], 4) = 0\n< getsockname(3, {sa_family=AF_INET, sin_port=htons(57040), sin_addr=inet_addr("10.3.0.5")}, [128->16]) = 0\n')]),a("span",{pre:!0,attrs:{class:"token inserted-arrow inserted"}},[t._v('> getsockname(3, {sa_family=AF_INET, sin_port=htons(57012), sin_addr=inet_addr("10.3.0.5")}, [128->16]) = 0\n')])])])]),a("p",[t._v("TCP KeepAlive が有効化されている時は "),a("code",[t._v("setsockopt")]),t._v(" で指定されていますね。strace で見た時に "),a("code",[t._v("setsockopt(<sockfd>, SOL_SOCKET, SO_KEEPALIVE, [1], 4)")]),t._v("  が存在すれば有効になってそうな匂いを感じます ("),a("code",[t._v("TCP_KEEPIDLE")]),t._v(" とか "),a("code",[t._v("TCP_KEEPINTVL")]),t._v(" はデフォルト インターバル値の上書きと予想できます)。")]),t._v(" "),a("p",[t._v("実際、Linux のドキュメントを探したらありました。セクション 4.2 にまさに探していた情報が載っていましたね。")]),t._v(" "),a("blockquote",[a("p",[t._v("All you need to enable keepalive for a specific socket is to set the specific socket option on the socket itself. The prototype of the function is as follows:")]),t._v(" "),a("p",[t._v("int setsockopt(int s, int level, int optname,\nconst void *optval, socklen_t optlen)")]),t._v(" "),a("p",[t._v("The first parameter is the socket, previously created with the socket(2); the second one must be SOL_SOCKET, and the third must be SO_KEEPALIVE . The fourth parameter must be a boolean integer value, indicating that we want to enable the option, while the last is the size of the value passed before.")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP Keepalive HOWTO"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("第 3 引数に "),a("code",[t._v("1")]),t._v(" (の値を格納した 4 byte のメモリスペースへのポインタ) を指定すれば、第 1 引数に指定した "),a("code",[t._v("sockfd")]),t._v(" の TCP KeepAlive が有効になるそうです。")]),t._v(" "),a("h2",{attrs:{id:"ソースコードのないアプリケーションを-tcp-keepalive-対応させるには"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ソースコードのないアプリケーションを-tcp-keepalive-対応させるには"}},[t._v("#")]),t._v(" ソースコードのないアプリケーションを TCP KeepAlive 対応させるには?")]),t._v(" "),a("p",[a("code",[t._v("setsockopt")]),t._v(" でごにょごにょすれば TCP KeepAlive を有効化できるのはわかった。OS の仕組みで TCP KeepAlive 有効化できないの？と思いますよね。")]),t._v(" "),a("p",[t._v("しっかりありました。"),a("code",[t._v("LD_PRELOAD")]),t._v(" というものだそうです。")]),t._v(" "),a("p",[a("code",[t._v("LD_PRELOAD")]),t._v(" は Linux の特別な環境変数で、動的ライブラリ/共有ライブラリへのパスを値として設定すると、任意の動的ライブラリよりもそのライブラリが優先的にリンクされてプログラムが実行されます。この機能に着目したのが、"),a("code",[t._v("libkeepalive.so")]),t._v(" です。"),a("code",[t._v("socket")]),t._v(" を開いた時に、一緒に TCP KeepAlive も有効化するように、カスタマイズされたソケット ライブラリを提供するものです。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://libkeepalive.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://libkeepalive.sourceforge.net/"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("実際に使ってみるとその効果がわかるので、テストプログラムを動かしてみることをおすすめします。")]),t._v(" "),a("h3",{attrs:{id:"テストプログラム"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#テストプログラム"}},[t._v("#")]),t._v(" テストプログラム")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP Keepalive HOWTO"),a("OutboundLink")],1),t._v(" のセクション 4.3 にあるプログラム "),a("code",[t._v("test")]),t._v(" を動かしてみます。"),a("code",[t._v("test")]),t._v(" は、単に socket を新たにオープンした直後、その socket の TCP KeepAlive 設定 (SO_KEEPALIVE) 値を出力します。通常であれば無効化 ("),a("code",[t._v("0")]),t._v(") となっているはずの値ですね。その後に、明示的に TCP KeepAlive を有効化してから、再度 SO_KEEPALIVE を出力します。最後には "),a("code",[t._v("1")]),t._v(" となっているはずです。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("EOF "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("test.c\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <stdio.h>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <stdlib.h>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <unistd.h>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <sys/types.h>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <sys/socket.h>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <netinet/in.h>")]),t._v("\n\nint "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   int s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   int optval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   socklen_t optlen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sizeof"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("optval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PF_INET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SOCK_STREAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" IPPROTO_TCP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      perror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"socket()"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXIT_FAILURE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("getsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s, SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("optval, "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("optlen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      perror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"getsockopt()"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXIT_FAILURE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   printf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SO_KEEPALIVE is %s'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("optval ? "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ON"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OFF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   optval "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   optlen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sizeof"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("optval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("setsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s, SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("optval, optlen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      perror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"setsockopt()"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXIT_FAILURE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   printf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SO_KEEPALIVE set on socket'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("getsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s, SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("optval, "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("optlen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      perror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"getsockopt()"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXIT_FAILURE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   printf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SO_KEEPALIVE is %s'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("optval ? "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ON"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OFF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXIT_SUCCESS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nEOF\n\n$ gcc -o "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" test.c\n\n$ ./test\nSO_KEEPALIVE is OFF\nSO_KEEPALIVE "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" on socket\nSO_KEEPALIVE is ON\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strace")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("trace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("network ./test\nsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AF_INET, SOCK_STREAM, IPPROTO_TCP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\ngetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nSO_KEEPALIVE is OFF\nsetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nSO_KEEPALIVE "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" on socket\ngetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nSO_KEEPALIVE is ON\n")])])]),a("p",[t._v("何の変哲もない期待通りの動作です。"),a("code",[t._v("setsockopt")]),t._v(" で "),a("code",[t._v("SO_KEEPALIVE")]),t._v(" を 1 にセットしない限り、デフォルトでは TCP KeepAlive は無効です。")]),t._v(" "),a("h3",{attrs:{id:"libkeepalive-ありのテストプログラム"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#libkeepalive-ありのテストプログラム"}},[t._v("#")]),t._v(" libkeepalive ありのテストプログラム")]),t._v(" "),a("p",[t._v("続いて "),a("code",[t._v("libkeepalive.so")]),t._v(" をかましてみるとどうなるか。以下の通り、デフォルトの動作が変化します。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v("  https://excellmedia.dl.sourceforge.net/project/libkeepalive/libkeepalive/0.3/libkeepalive-0.3.tar.gz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xzvf libkeepalive-0.3.tar.gz\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" libkeepalive-0.3\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" libkeepalive.so /usr/lib/\n\n$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LD_PRELOAD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/lib/libkeepalive.so ./test\nSO_KEEPALIVE is ON\nSO_KEEPALIVE "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" on socket\nSO_KEEPALIVE is ON\n\n$ $ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LD_PRELOAD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/lib/libkeepalive.so "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strace")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("trace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("network ./test\nsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AF_INET, SOCK_STREAM, IPPROTO_TCP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nsetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\ngetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nSO_KEEPALIVE is ON\nsetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nSO_KEEPALIVE "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" on socket\ngetsockopt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", SOL_SOCKET, SO_KEEPALIVE, "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nSO_KEEPALIVE is ON\n+++ exited with "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" +++\n")])])]),a("p",[t._v("先程と違い "),a("code",[t._v("setsockopt(3, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0")]),t._v(" が (見ず知らずのうちに) 挿入されていることがわかります。")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP Keepalive HOWTO"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://docs.microsoft.com/ja-jp/windows-hardware/drivers/network/so-keepalive",target:"_blank",rel:"noopener noreferrer"}},[t._v("SO_KEEPALIVE - Windows drivers | Microsoft Docs"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://medium.com/@rajivsharma.2205/enable-tcp-keepalive-on-redis-cluster-bus-153128e412fa",target:"_blank",rel:"noopener noreferrer"}},[t._v("Enable TCP keepalive on Redis cluster bus (gossip inside cluster) | by Rajivsharma | Medium"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://kazuhira-r.hatenablog.com/entry/2020/02/27/002840",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinuxのTCP Keep-Aliveを確認する - CLOVER🍀"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://man7.org/linux/man-pages/man8/ss.8.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ss(8) - Linux manual page"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://tech.tier4.jp/entry/2021/03/10/160000",target:"_blank",rel:"noopener noreferrer"}},[t._v("eBPFやLD_PRELOADを利用した共有ライブラリの関数フック - Tier IV Tech Blog"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://quickhack.net/nom/blog/2018-01-19-enable-tcp-keepalive-of-macos-and-linux-in-ruby.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Enable TCP keepalive of macOS and Linux in Ruby"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://qiita.com/developer-kikikaikai/items/f6f87b2d1d7c3e14fb52",target:"_blank",rel:"noopener noreferrer"}},[t._v("既存プログラムの関数を書き換える、強力で危険なLinux環境変数LD_PRELOAD - Qiita"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);