(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{216:function(s,t,e){"use strict";e.r(t);var a=e(1),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v('Brendan Gregg 氏のハンズオン ワークショップ "bpf-perf-workshop" より、最初の課題 (アプリケーション レイテンシの調査課題) "lab2" をやってみました。')]),s._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#課題"}},[s._v("課題")])]),e("li",[e("a",{attrs:{href:"#_60秒分析"}},[s._v("60秒分析")])]),e("li",[e("a",{attrs:{href:"#bcc-tools"}},[s._v("bcc tools")]),e("ul",[e("li",[e("a",{attrs:{href:"#execsnoop"}},[s._v("execsnoop")])]),e("li",[e("a",{attrs:{href:"#opensnoop"}},[s._v("opensnoop")])]),e("li",[e("a",{attrs:{href:"#ext4slower-or-btrfs-xfs-zfs"}},[s._v("ext4slower (or btrfs, xfs, zfs*)")])]),e("li",[e("a",{attrs:{href:"#biolatency"}},[s._v("biolatency")])]),e("li",[e("a",{attrs:{href:"#biosnoop"}},[s._v("biosnoop")])]),e("li",[e("a",{attrs:{href:"#cachestat"}},[s._v("cachestat")])]),e("li",[e("a",{attrs:{href:"#tcpconnect"}},[s._v("tcpconnect")])]),e("li",[e("a",{attrs:{href:"#tcpaccept"}},[s._v("tcpaccept")])]),e("li",[e("a",{attrs:{href:"#tcpretrans"}},[s._v("tcpretrans")])]),e("li",[e("a",{attrs:{href:"#runqlat"}},[s._v("runqlat")])])])]),e("li",[e("a",{attrs:{href:"#答え合わせ"}},[s._v("答え合わせ")]),e("ul",[e("li",[e("a",{attrs:{href:"#対応策-fsync-をやめる"}},[s._v("対応策: fsync をやめる")])]),e("li",[e("a",{attrs:{href:"#その他の対応策"}},[s._v("その他の対応策")])])])])])]),e("p"),s._v(" "),e("h2",{attrs:{id:"課題"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#課題"}},[s._v("#")]),s._v(" 課題")]),s._v(" "),e("p",[s._v("今回の問題はこちら。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/brendangregg/bpf-perf-workshop/blob/master/lab1.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("bpf-perf-workshop/lab1.md at master · brendangregg/bpf-perf-workshop"),e("OutboundLink")],1)]),s._v(" "),e("blockquote",[e("p",[s._v("Problem Statement\nAn application has higher-than expected latency, including latency outliers. Why, and how can performance be improved?")])]),s._v(" "),e("p",[s._v("思ったようにパフォーマンスが出ない (i.e. 実行レイテンシが大きい) アプリケーション "),e("code",[s._v("./lab001")]),s._v(" に対して、その理由と改善方法を調査しろ、という課題。")]),s._v(" "),e("h2",{attrs:{id:"_60秒分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_60秒分析"}},[s._v("#")]),s._v(" 60秒分析")]),s._v(" "),e("p",[s._v("まずは、有名な 60 秒分析で CPU、Memory、FileSystem/Disks、Network のいずれがボトルネックになっているかフィーリングを掴む。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://netflixtechblog.com/linux-performance-analysis-in-60-000-milliseconds-accc10403c55",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux Performance Analysis in 60,000 Milliseconds | by Netflix Technology Blog | Netflix TechBlog"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# uptime\n 12:31:53 up 30 min,  3 users,  load average: 1.99, 1.37, 0.65\n")])])]),e("p",[e("code",[s._v("lab001")]),s._v(" を実行した後の "),e("code",[s._v("uptime")]),s._v(" の結果が上。後半 3 つの値は、それぞれ直近 1, 5, 15 分での load average (移動指数平均) を表している。")]),s._v(" "),e("p",[s._v("Linux での load average は、TASK_RUNNING + TASK_UNINTERRUPTIBLE 状態なタスク数の総和を表してることに注意すれば、"),e("code",[s._v("lab001")]),s._v(" を実行したことでこれらタスクの数が増えてきていることが確認できる。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('root@vm-ubuntu:~# dmesg | tail\n[   13.055942] audit: type=1400 audit(1620907273.224:11): apparmor="STATUS" operation="profile_load" profile="unconfined" name="/usr/lib/snapd/snap-confine" pid=841 comm="apparmor_parser"\n[   18.327127] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready\n[   23.839985]  sda: sda1\n[   26.123281] EXT4-fs (sda1): mounted filesystem with ordered data mode. Opts: (null)\n[   26.588156] new mount options do not match the existing superblock, will be ignored\n[   57.834818] hv_balloon: Max. dynamic memory size: 16384 MB\n[  109.372614] SGI XFS with ACLs, security attributes, realtime, no debug enabled\n[  109.466644] JFS: nTxBlock = 8192, nTxLock = 65536\n[  109.531712] ntfs: driver 2.1.32 [Flags: R/O MODULE].\n[  109.685490] QNX4 filesystem 0.2.3 registered.\n')])])]),e("p",[e("code",[s._v("dmesg -T")]),s._v(" とか見てみるとよく分かるけど、"),e("code",[s._v("lab001")]),s._v(" を起動してからは特に異常が発生した様子はない。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# vmstat -S M 1\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n 1  1      0  14846     88    786    0    0    77   342   56  187  1  0 96  3  0\n 0  1      0  14846     88    786    0    0     0  1696  556 1637  0  0 97  2  0\n 0  1      0  14846     88    786    0    0     0  3712  372 1641  0  0 80 19  0\n 0  1      0  14846     88    786    0    0     0  1776  355 1681  0  0 76 24  0\n 0  1      0  14846     88    786    0    0     0  3788  540 1747  0  1 93  6  0\n")])])]),e("ul",[e("li",[s._v("UNINTERRUPTIBLE_SLEEP 状態なタスクが常に 1 つある")]),s._v(" "),e("li",[s._v("User (us), System (sy) 時間ともにほとんど消費していない")]),s._v(" "),e("li",[s._v("I/O 待ち (wa) 時間が比較的多い (24 %を占めるときもある)")]),s._v(" "),e("li",[s._v("Swap In/Out はゼロで問題なし")]),s._v(" "),e("li",[s._v("空きメモリも余裕がある")])]),s._v(" "),e("p",[s._v("以上の点から、CPU やメモリでのボトルネックではなく、I/O でのボトルネック説が疑われる。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# mpstat -P ALL 1\nLinux 5.4.0-1047-azure (vm-ubuntu)      05/13/21        _x86_64_        (4 CPU)\n\n12:43:52     CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle\n12:43:53     all    0.25    0.00    0.50   13.07    0.00    0.00    0.00    0.00    0.00   86.18\n12:43:53       0    0.00    0.00    0.00   51.52    0.00    0.00    0.00    0.00    0.00   48.48\n12:43:53       1    0.00    0.00    1.00    2.00    0.00    0.00    0.00    0.00    0.00   97.00\n12:43:53       2    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00\n12:43:53       3    0.00    0.00    1.01    0.00    0.00    0.00    0.00    0.00    0.00   98.99\n\n12:43:53     CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle\n12:43:54     all    0.25    0.00    1.00    2.99    0.00    0.00    0.00    0.00    0.00   95.76\n12:43:54       0    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00\n12:43:54       1    1.00    0.00    0.00    3.00    0.00    0.00    0.00    0.00    0.00   96.00\n12:43:54       2    0.00    0.00    1.98    7.92    0.00    0.00    0.00    0.00    0.00   90.10\n12:43:54       3    0.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00    0.00   99.00\n\n12:43:54     CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle\n12:43:55     all    0.00    0.00    0.50    1.50    0.00    0.00    0.00    0.00    0.00   97.99\n12:43:55       0    0.00    0.00    0.00    0.00    0.00    1.00    0.00    0.00    0.00   99.00\n12:43:55       1    0.00    0.00    1.00    3.00    0.00    0.00    0.00    0.00    0.00   96.00\n12:43:55       2    0.00    0.00    1.00    4.00    0.00    0.00    0.00    0.00    0.00   95.00\n12:43:55       3    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00\n")])])]),e("p",[s._v("論理 CPU ごとに負荷がばらけているわけではなく、CPU#0 で I/O Wait が発生するタスクが実行されている模様。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# pidstat 1\nLinux 5.4.0-1047-azure (vm-ubuntu)      05/13/21        _x86_64_        (4 CPU)\n\n12:45:12      UID       PID    %usr %system  %guest   %wait    %CPU   CPU  Command\n12:45:13        0        11    0.99    0.00    0.00    0.00    0.99     3  rcu_sched\n12:45:13        0       380    0.00    1.98    0.00    0.00    1.98     2  jbd2/sdb1-8\n12:45:13        0      5689    0.00    0.99    0.00    0.00    0.99     1  lab001\n12:45:13        0      7009    0.99    0.00    0.00    0.00    0.99     3  pidstat\n\n12:45:13      UID       PID    %usr %system  %guest   %wait    %CPU   CPU  Command\n12:45:14        0       380    0.00    1.00    0.00    0.00    1.00     2  jbd2/sdb1-8\n12:45:14        0      5689    0.00    1.00    0.00    0.00    1.00     1  lab001\n12:45:14        0      7009    0.00    1.00    0.00    0.00    1.00     3  pidstat\n\n12:45:14      UID       PID    %usr %system  %guest   %wait    %CPU   CPU  Command\n12:45:15        0       380    0.00    2.00    0.00    1.00    2.00     2  jbd2/sdb1-8\n12:45:15        0      5689    0.00    1.00    0.00    0.00    1.00     1  lab001\n")])])]),e("p",[s._v("pidstat が表示するパーセンテージは、全 CPU の総和である点に注意。あまり有益な情報は得られていない。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# iostat -xz 1\n\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           0.25    0.00    0.00    1.76    0.00   97.99\n\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\nsdb              0.00  325.00      0.00   1748.00     0.00   112.00   0.00  25.63    0.00    3.00   0.68     0.00     5.38   3.06  99.60\n\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           0.00    0.00    0.25    1.51    0.00   98.24\n\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\nsdb              0.00  262.00      0.00   3424.00     0.00    86.00   0.00  24.71    0.00    3.79   0.80     0.00    13.07   3.83 100.40\n\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           0.00    0.00    0.25   12.56    0.00   87.19\n\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\nsdb              0.00  276.00      0.00   1472.00     0.00    92.00   0.00  25.00    0.00    3.59   0.78     0.00     5.33   3.64 100.40\n")])])]),e("p",[e("code",[s._v("/dev/sdb")]),s._v("  に対して、Write 命令が多く見られる。具体的には、以下の通り:")]),s._v(" "),e("ul",[e("li",[s._v("秒あたりの Read リクエスト完了数 (r/s) はゼロ")]),s._v(" "),e("li",[s._v("秒あたりの Write リクエスト完了数 (w/s) は 300 近い")]),s._v(" "),e("li",[s._v("秒あたりの Read セクタ量 (rkB/s) はゼロ")]),s._v(" "),e("li",[s._v("秒あたりの Write セクタ量 (wkB/s) は数千 Kbyte 近い")])]),s._v(" "),e("p",[s._v("また、Write 側のキューサイズ (wavgqu-sz) が恒常的に 1 を超えた値を記録しているので、物理デバイス I/O の飽和が発生していることが、ここからもわかる。")]),s._v(" "),e("p",[s._v("なお、Write リクエストのマージ率 (%wrqm) が 25% と比較的高いことから、同じようなセクタへの書き込みが多く発生していそうな匂いがする。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# free -m\n              total        used        free      shared  buff/cache   available\nMem:          16013         295       14840           0         877       15431\nSwap:             0           0           0\n")])])]),e("p",[s._v("free + buff/cache ないしは available に全然余裕があるので、問題なし。"),e("code",[s._v("dmseg")]),s._v(" で "),e("code",[s._v("oom-killer")]),s._v(" も観測していない。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# sar -n DEV 1\nLinux 5.4.0-1047-azure (vm-ubuntu)      05/13/21        _x86_64_        (4 CPU)\n\n13:04:38        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n13:04:39           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00\n13:04:39         eth0      1.00      0.00      0.06      0.00      0.00      0.00      0.00      0.00\n\n13:04:39        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n13:04:40           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00\n13:04:40         eth0      1.00      2.00      0.06      1.49      0.00      0.00      0.00      0.00\n\n13:04:40        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n13:04:41           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00\n13:04:41         eth0      1.00      1.00      0.06      0.60      0.00      0.00      0.00      0.00\n")])])]),e("p",[s._v("使用率 (%ifutil) を見ても全然余裕があるし、実際発生しているパケットの数や量 (*pck/s, *kB/s) も少ない。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# sar -n TCP,ETCP 1\nLinux 5.4.0-1047-azure (vm-ubuntu)      05/13/21        _x86_64_        (4 CPU)\n\n13:07:05     active/s passive/s    iseg/s    oseg/s\n13:07:06         0.00      0.00      1.00      0.00\n\n13:07:05     atmptf/s  estres/s retrans/s isegerr/s   orsts/s\n13:07:06         0.00      0.00      0.00      0.00      0.00\n\n13:07:06     active/s passive/s    iseg/s    oseg/s\n13:07:07         0.00      0.00      1.00      2.00\n\n13:07:06     atmptf/s  estres/s retrans/s isegerr/s   orsts/s\n13:07:07         0.00      0.00      0.00      0.00      0.00\n\n13:07:07     active/s passive/s    iseg/s    oseg/s\n13:07:08         0.00      0.00      1.00      2.00\n\n13:07:07     atmptf/s  estres/s retrans/s isegerr/s   orsts/s\n13:07:08         0.00      0.00      0.00      0.00      0.00\n")])])]),e("p",[s._v("念の為みてみたが、TCP レベルの stats でも問題ない。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~# top\n\ntop - 13:08:08 up  1:07,  4 users,  load average: 2.05, 2.01, 1.90\nTasks: 157 total,   1 running,  89 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.2 us,  0.6 sy,  0.0 ni, 92.6 id,  6.5 wa,  0.0 hi,  0.2 si,  0.0 st\nKiB Mem : 16398260 total, 15191744 free,   306500 used,   900016 buff/cache\nKiB Swap:        0 total,        0 free,        0 used. 15798152 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n  380 root      20   0       0      0      0 D   1.3  0.0   0:33.53 jbd2/sdb1-8\n 5689 root      20   0    6564   3016   1136 D   1.0  0.0   0:30.62 lab001\n  418 root       0 -20       0      0      0 I   0.3  0.0   0:04.96 kworker/0:1H-kb\n 8713 root      20   0   44560   3988   3344 R   0.3  0.0   0:00.05 top\n    1 root      20   0   78000   9032   6572 S   0.0  0.1   0:02.95 systemd\n")])])]),e("p",[e("code",[s._v("D")]),s._v(" (UNINTERRUPTIBLE_SLEEP) なプロセス 2 つが top の上位にきているので、こいつらが I/O (write) を占領していると考えるのが妥当そう。")]),s._v(" "),e("h2",{attrs:{id:"bcc-tools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bcc-tools"}},[s._v("#")]),s._v(" bcc tools")]),s._v(" "),e("p",[s._v("上記の 60 秒 (自分がやると数分かかる) 分析によって、PID=5689 の "),e("code",[s._v("lab001")]),s._v(" が　I/O Write を大量に発行しているために、システムに負荷がかかっている可能性が高いことがわかった。\n続いて、bcc の一般的なツールを使って、更に詳細に分析していくことにする。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/iovisor/bcc/blob/master/docs/tutorial.md#1-general-performance",target:"_blank",rel:"noopener noreferrer"}},[s._v("bcc/tutorial.md at master · iovisor/bcc"),e("OutboundLink")],1)]),s._v(" "),e("h3",{attrs:{id:"execsnoop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#execsnoop"}},[s._v("#")]),s._v(" execsnoop")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('root@vm-ubuntu:~/bcc/tools# ./execsnoop.py\nPCOMM            PID    PPID   RET ARGS\npgrep            9213   2672     0 /usr/bin/pgrep -U omsagent omiagent\nsh               9214   2672     0 /bin/sh -c /opt/omi/bin/omicli wql root/scx "SELECT PercentUserTime, PercentPrivilegedTime, UsedMemory, PercentUsedMemory FROM SCX_UnixProc\nomicli           9216   9214     0 /opt/omi/bin/omicli wql root/scx SELECT PercentUserTime, PercentPrivilegedTime, UsedMemory, PercentUsedMemory FROM SCX_UnixProcessStatisticalInformation where Ha\ngrep             9217   9214     0 /bin/grep =\nsh               9219   2672     0 /bin/sh -c /opt/omi/bin/omicli wql root/scx "SELECT PercentUserTime, PercentPrivilegedTime, UsedMemory, PercentUsedMemory FROM SCX_UnixProc\n')])])]),e("p",[s._v("特に 5689 から child process が生成されているわけではない。")]),s._v(" "),e("h3",{attrs:{id:"opensnoop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opensnoop"}},[s._v("#")]),s._v(" opensnoop")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./opensnoop.py -p $(pgrep -nx lab001)\nPID    COMM               FD ERR PATH\n")])])]),e("p",[s._v("新たに file を open している訳ではない")]),s._v(" "),e("h3",{attrs:{id:"ext4slower-or-btrfs-xfs-zfs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ext4slower-or-btrfs-xfs-zfs"}},[s._v("#")]),s._v(" ext4slower (or btrfs*, xfs*, zfs*)")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./ext4slower.py\nTracing ext4 operations slower than 10 ms\nTIME     COMM           PID    T BYTES   OFF_KB   LAT(ms) FILENAME\n13:22:38 lab001         5689   S 0       0          10.15 lab001.log\n13:22:38 lab001         5689   S 0       0          11.70 lab001.log\n13:22:39 lab001         5689   S 0       0          11.76 lab001.log\n13:22:39 lab001         5689   S 0       0          10.42 lab001.log\n13:22:39 lab001         5689   S 0       0          10.02 lab001.log\n")])])]),e("p",[s._v("同じ path の file に対して、"),e("code",[s._v("S")]),s._v(" の種別のオペレーションが多発している。"),e("code",[s._v("ext4slower.py")]),s._v(" の実装を見ると、Type は以下のように定義されている。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("R")]),s._v(": read")]),s._v(" "),e("li",[e("code",[s._v("W")]),s._v(": write")]),s._v(" "),e("li",[e("code",[s._v("O")]),s._v(": open")]),s._v(" "),e("li",[e("code",[s._v("S")]),s._v(": fsync")])]),s._v(" "),e("p",[s._v("つまり、1 秒間に数回の高頻度で fsync が実施されていることがわかる。")]),s._v(" "),e("h3",{attrs:{id:"biolatency"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biolatency"}},[s._v("#")]),s._v(" biolatency")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./biolatency.py -D -Q\nTracing block device I/O... Hit Ctrl-C to end.\n^C\n\ndisk = b'sdb'\n     usecs               : count     distribution\n         0 -> 1          : 0        |                                        |\n         2 -> 3          : 0        |                                        |\n         4 -> 7          : 0        |                                        |\n         8 -> 15         : 0        |                                        |\n        16 -> 31         : 0        |                                        |\n        32 -> 63         : 39       |****                                    |\n        64 -> 127        : 356      |****************************************|\n       128 -> 255        : 316      |***********************************     |\n       256 -> 511        : 169      |******************                      |\n       512 -> 1023       : 74       |********                                |\n      1024 -> 2047       : 16       |*                                       |\n      2048 -> 4095       : 4        |                                        |\n      4096 -> 8191       : 258      |****************************            |\n      8192 -> 16383      : 210      |***********************                 |\n     16384 -> 32767      : 12       |*                                       |\n     32768 -> 65535      : 1        |                                        |\n")])])]),e("p",[s._v("Disk queue に入ってから完了するまでのレイテンシー分布を表示。分布が二峰になっているので、レイテンシーが遅いほうの分布は特定プログラム (i.e. lab001) による影響と仮設できる。")]),s._v(" "),e("h3",{attrs:{id:"biosnoop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biosnoop"}},[s._v("#")]),s._v(" biosnoop")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./biosnoop.py\nTIME(s)     COMM           PID    DISK    T SECTOR     BYTES  LAT(ms)\n0.000000    jbd2/sdb1-8    380    sdb     W 2406576    4096      3.21\n0.000348    lab001         5689   sdb     W 9009528    4096      0.21\n0.000524    jbd2/sdb1-8    380    sdb     W 2406584    8192      0.14\n0.004578    ?              0              R 0          0         4.00\n0.007575    jbd2/sdb1-8    380    sdb     W 2406600    4096      2.96\n0.007825    lab001         5689   sdb     W 9009528    4096      0.17\n0.007917    jbd2/sdb1-8    380    sdb     W 2406608    8192      0.06\n")])])]),e("p",[s._v("やはり lab001 による Write リクエストが多く発生している。ext4 用のジャーナリングシステムである "),e("code",[s._v("jdb2")]),s._v(" が連動していること、lab001 が発行する wirte のサイズが 4096 であることを考慮して、以下のように推測できる:")]),s._v(" "),e("ul",[e("li",[s._v("lab001 が頻繁に書き込みしているファイルシステムは ext4 であり、その block size はデフォルトの 4096 byte である。")])]),s._v(" "),e("p",[s._v("ファイルシステムに疎いので、また別の機会に ext4 と jdb2 について調べてみたい。")]),s._v(" "),e("h3",{attrs:{id:"cachestat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cachestat"}},[s._v("#")]),s._v(" cachestat")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./cachestat.py\n    HITS   MISSES  DIRTIES HITRATIO   BUFFERS_MB  CACHED_MB\n       0        0      720    0.00%           93        782\n     132        0      211  100.00%           93        782\n       0        0      724    0.00%           93        782\n     106        0      210  100.00%           93        782\n       0        0      716    0.00%           93        782\n     112        0      220  100.00%           93        782\n       0        0      708    0.00%           93        782\n")])])]),e("p",[s._v("ファイルシステムでのキャッシュヒット率には問題はなし。")]),s._v(" "),e("h3",{attrs:{id:"tcpconnect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcpconnect"}},[s._v("#")]),s._v(" tcpconnect")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./tcpconnect.py\nTracing connect ... Hit Ctrl-C to end\nPID    COMM         IP SADDR            DADDR            DPORT\n1628   python3      4  10.0.0.4         168.63.129.16    80\n1628   python3      4  10.0.0.4         168.63.129.16    32526\n1628   python3      4  10.0.0.4         168.63.129.16    80\n1628   python3      4  10.0.0.4         169.254.169.254  80\n1628   python3      4  10.0.0.4         168.63.129.16    80\n")])])]),e("p",[s._v("Azure VM でホストした Ubuntu マシンだったので、管理用エージェント (waagent) が仮想 IP と通信している様子が見えた。それ以外に怪しい点はなし。")]),s._v(" "),e("h3",{attrs:{id:"tcpaccept"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcpaccept"}},[s._v("#")]),s._v(" tcpaccept")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./tcpaccept.py\nPID     COMM         IP RADDR            RPORT LADDR            LPORT\n")])])]),e("p",[s._v("passive TCP コネクション (accept 経由の TCP コネクション確立) は特に発生なし。")]),s._v(" "),e("h3",{attrs:{id:"tcpretrans"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcpretrans"}},[s._v("#")]),s._v(" tcpretrans")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./tcpretrans.py\nTracing retransmits ... Hit Ctrl-C to end\nTIME     PID    IP LADDR:LPORT          T> RADDR:RPORT          STATE\n")])])]),e("p",[s._v("TCP コネクションの再送もなし。")]),s._v(" "),e("h3",{attrs:{id:"runqlat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runqlat"}},[s._v("#")]),s._v(" runqlat")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./runqlat.py\nTracing run queue latency... Hit Ctrl-C to end.\n^C\n     usecs               : count     distribution\n         0 -> 1          : 200      |**                                      |\n         2 -> 3          : 779      |*********                               |\n         4 -> 7          : 1761     |********************                    |\n         8 -> 15         : 3433     |****************************************|\n        16 -> 31         : 1086     |************                            |\n        32 -> 63         : 91       |*                                       |\n        64 -> 127        : 649      |*******                                 |\n       128 -> 255        : 9        |                                        |\n       256 -> 511        : 3        |                                        |\n       512 -> 1023       : 3        |                                        |\n      1024 -> 2047       : 1        |                                        |\n      2048 -> 4095       : 1        |                                        |\n")])])]),e("p",[s._v("ran queue レイテンシの分布を見ても、queue 内で長い間待たされている Task はほぼないので、CPU の飽和は認められない。")]),s._v(" "),e("h2",{attrs:{id:"答え合わせ"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#答え合わせ"}},[s._v("#")]),s._v(" 答え合わせ")]),s._v(" "),e("p",[s._v("実行していたアプリケーションのソースコードは下記に存在する。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/brendangregg/bpf-perf-workshop/blob/master/src/lab001.c",target:"_blank",rel:"noopener noreferrer"}},[s._v("bpf-perf-workshop/lab001.c at master · brendangregg/bpf-perf-workshop"),e("OutboundLink")],1)]),s._v(" "),e("ul",[e("li",[e("code",[s._v("fsync")]),s._v(" を伴う "),e("code",[s._v("write")]),s._v(" (os_write 関数) を永遠に回すプログラム")]),s._v(" "),e("li",[s._v("128 byte もしくは 2 Mbyte ずつ、zero 埋めされた配列を os_wirte で書き込んでいく。")]),s._v(" "),e("li",[s._v("ファイルサイズ (50 Mbyte) の最後まで zero 配列を書き込んだら、"),e("code",[s._v("lseek")]),s._v(" で offset=0 に戻って再度やり直し。")])]),s._v(" "),e("p",[s._v("ということで、"),e("code",[s._v("fsync")]),s._v(" を伴っているために、128 byte の書き込みを行うときは、ext4 の block size である 4096 byte に書き込みが expand される。そのため、殆どが無駄な I/O になってしまっていることがわかる。以下の "),e("code",[s._v("biosnoop.py")]),s._v(" からも、4096 byte の物理 I/O (FIleSytem -> Disk の要求) が発生していることが確認できる。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# ./biosnoop.py | grep lab001\nTIME(s)     COMM           PID    DISK    T SECTOR     BYTES  LAT(ms)\n...\n2.197601    jbd2/sdb1-8    380    sdb     W 2384488    4096      3.45\n2.197816    lab001         5689   sdb     W 8997120    4096      0.08\n2.198063    jbd2/sdb1-8    380    sdb     W 2384496    8192      0.19\n2.203421    ?              0              R 0          0         5.34\n2.207513    jbd2/sdb1-8    380    sdb     W 2384512    4096      4.06\n2.209320    lab001         5689   sdb     W 8997120    524288    0.47\n2.209352    lab001         5689   sdb     W 8998144    524288    0.49\n2.209510    lab001         5689   sdb     W 8999168    524288    0.64\n2.209675    lab001         5689   sdb     W 9000192    524288    0.80\n2.209854    lab001         5689   sdb     W 9001216    4096      0.97\n2.209957    jbd2/sdb1-8    380    sdb     W 2384520    8192      0.06\n2.229271    ?              0              R 0          0        19.30\n2.232790    jbd2/sdb1-8    380    sdb     W 2384536    4096      3.48\n2.233011    lab001         5689   sdb     W 9001216    4096      0.11\n2.233180    jbd2/sdb1-8    380    sdb     W 2384544    8192      0.10\n2.237200    ?              0              R 0          0         4.00\n")])])]),e("p",[s._v("なお、途中で 524288 byte の write 要求 4 つ続く箇所があるが、これが 2 Mbyte の書き込みに相当する。")]),s._v(" "),e("p",[s._v("ext4 が物理 I/O を 524,288 byte に丸めこんでいるために 4 つに分割されていると推測できるが、今の知識では ext4 ファイルシステムが物理 I/O を計算する方法がわかららず、なぜ 4 分割されているのか (128 blocks 分で物理 I/O を発行しているのか) わからなかった。これは今後の課題としたい。")]),s._v(" "),e("h3",{attrs:{id:"対応策-fsync-をやめる"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#対応策-fsync-をやめる"}},[s._v("#")]),s._v(" 対応策: fsync をやめる")]),s._v(" "),e("p",[s._v("最も単純かつ効果の高い対応方法は "),e("code",[s._v("fsync")]),s._v(" をやめることだろう。つまり、"),e("code",[s._v("lab001.c")]),s._v(" に下記の変更を加える。")]),s._v(" "),e("div",{staticClass:"language-diff extra-class"},[e("pre",{pre:!0,attrs:{class:"language-diff"}},[e("code",[e("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[s._v("- fsync(fd);\n")]),e("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s._v("+ //fsync(fd);\n")])])])]),e("p",[s._v("再コンパイルして得られた新たなアプリケーションでは、下記のように I/O の改善が見られた。\n文章にすると、「file system の write buffer (キャッシュ) によって、物理 I/O の発行数が減り、"),e("code",[s._v("lab001")]),s._v(" や ext4 ジャーナリングシステムが I/O 待ちすることがなくなった」というところでしょうか。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("root@vm-ubuntu:~/bcc/tools# uptime\n 14:54:26 up  2:53,  5 users,  load average: 1.03, 1.23, 1.62\n\nroot@vm-ubuntu:~/bcc/tools# vmstat -S k 1\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n 2  0      0 15414116 102080 949317    0    0    19   601  108  351  0  1 93  6  0\n 1  0      0 15414108 102080 949317    0    0     0     0  100  261  2 23 75  0  0\n 1  0      0 15414108 102080 949317    0    0     0     4  111  303  2 23 75  0  0\n 1  0      0 15414108 102080 949317    0    0     0 96860   96  255  1 16 74 10  0\n 1  0      0 15414206 102080 949317    0    0     0     0   54  243  2 24 75  0  0\n 1  0      0 15414206 102080 949321    0    0     0     0   75  212  2 24 75  0  0\n 1  0      0 15414206 102080 949321    0    0     0     0   68  175  1 24 75  0  0\n 1  0      0 15414206 102080 949321    0    0     0     0   44  112  2 23 75  0  0\n 1  0      0 15414206 102080 949321    0    0     0     4  219  462  2 24 74  0  0\n 1  0      0 15414206 102080 949317    0    0     0     4  637 1297  2 24 74  0  0\n\nroot@vm-ubuntu:~/bcc/tools# iostat -xz 1\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           2.26    0.00   23.06    0.00    0.00   74.69\n\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\nsdb              0.00    1.00      0.00      4.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     4.00   4.00   0.40\n")])])]),e("h3",{attrs:{id:"その他の対応策"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#その他の対応策"}},[s._v("#")]),s._v(" その他の対応策")]),s._v(" "),e("p",[s._v("おそらく他に効果のある対応は以下の通り (最後の方はシステムワイドな変更なので、多分実現可能性は低そう)。")]),s._v(" "),e("ul",[e("li",[s._v("論理 I/O (write) の書き込みサイズを、統一して大きくする")]),s._v(" "),e("li",[s._v("同じ箇所 (論理 offset) の書き込みを繰り返すスレッドに分割する (e.g. thread0 は offset = [0, 4096] を担当)")]),s._v(" "),e("li",[s._v("ファイルシステム (ext4) のブロックサイズを、論理 I/O にあわせて調節する")]),s._v(" "),e("li",[s._v("ファイルシステムでジャーナリングを無効化する")])])])}),[],!1,null,null,null);t.default=n.exports}}]);